////////////////////////////////////////////////////////////////////////////////
//
// This file was generated using Swagger Codegen, specialised for Wotif.com
//
////////////////////////////////////////////////////////////////////////////////

package {{package}}

import {{invokerPackage}}.ApiException;
import {{invokerPackage}}.PostBodyEncoder
import feign.*
import feign.RequestLine
import feign.codec.Decoder
import feign.codec.Encoder
import feign.jackson.JacksonDecoder
import javax.inject.Named

{{#imports}}
import {{import}}
{{/imports}}

{{#operations}}
/**
 * Feign Proxy
 */
interface {{classname}}Proxy {
  {{#operation}}
  @RequestLine("{{httpMethod}} {{path}}")
  {{#post}}
  {{#consumes}}
  @Headers("Content-Type: {{mediaType}};charset=UTF-8")
  {{/consumes}}
  {{/post}}
  Response {{nickname}}({{#allParams}}@Named("{{paramName}}") {{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}})
  
  {{/operation}}
}

/**
 * {{classname}} Client
 * generated using Swagger-Codegen
 */
class {{classname}} {

  private String basePath
  private {{classname}}Proxy feignProxy
  private Encoder encoder
  private Decoder decoder

  /**
   * Sets the base URL path for the service
   * @param basePath
   * @param requestInterceptor - interceptor to adjust headers
   */
 {{className}} setBasePath(String basePath, RequestInterceptor requestInterceptor) {
    this.basePath = basePath
    this.decoder = new JacksonDecoder()
    this.encoder = new PostBodyEncoder()
    Feign.Builder builder = Feign.builder().encoder(encoder).decoder(decoder)
    if (requestInterceptor != null) {
      builder.requestInterceptor(requestInterceptor)
    }
    feignProxy = builder.target({{classname}}Proxy.class, basePath)
    this
  }

  {{#operation}}
  {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}Response {{/returnType}} {{{nickname}}} ({{#allParams}}{{{dataType}}} {{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}})
  {{#requiredParamCount}}
  throws ApiException
  {{/requiredParamCount}}
  {
    {{#requiredParamCount}}
    // verify required params are set
    if({{#requiredParams}} !{{{paramName}}}{{#hasMore}} || {{/hasMore}}{{/requiredParams}}) {
       throw new ApiException(400, "missing required params")
    }
    {{/requiredParamCount}}
    feignProxy.{{{nickname}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}})
  }

  {{/operation}}
}
{{/operations}}